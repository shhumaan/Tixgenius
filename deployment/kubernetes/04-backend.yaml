apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: tixgenius
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: ghcr.io/${GITHUB_REPOSITORY}/backend:latest  # Replace with your actual image registry path
          ports:
            - containerPort: 3001
          env:
            - name: NODE_ENV
              value: production
            - name: PORT
              value: "3001"
            - name: DATABASE_URL
              value: postgresql://tixgenius:$(POSTGRES_PASSWORD)@postgres:5432/tixgenius
            - name: REDIS_URL
              value: redis://:$(REDIS_PASSWORD)@redis:6379
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: tixgenius-secrets
                  key: JWT_SECRET
            - name: SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: tixgenius-secrets
                  key: SESSION_SECRET
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tixgenius-secrets
                  key: POSTGRES_PASSWORD
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tixgenius-secrets
                  key: REDIS_PASSWORD
            - name: CORS_ORIGIN
              value: https://tixgenius.example.com  # Update with your actual frontend URL
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "300m"
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3001
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3001
            initialDelaySeconds: 30
            periodSeconds: 20
          startupProbe:
            httpGet:
              path: /api/health
              port: 3001
            failureThreshold: 30
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: tixgenius
spec:
  selector:
    app: backend
  ports:
    - port: 80
      targetPort: 3001
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
  namespace: tixgenius
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - api.tixgenius.example.com  # Update with your actual backend domain
      secretName: backend-tls
  rules:
    - host: api.tixgenius.example.com  # Update with your actual backend domain
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: backend
                port:
                  number: 80 